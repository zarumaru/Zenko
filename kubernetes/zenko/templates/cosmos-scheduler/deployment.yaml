{{- if .Values.cosmos.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cosmos-scheduler.fullname" . }}
  labels:
    app: {{ template "cosmos-scheduler.name" . }}
    chart: {{ template "zenko.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "cosmos-scheduler.name" . }}
      name: {{ template "cosmos-scheduler.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "cosmos-scheduler.name" . }}
        name: {{ template "cosmos-scheduler.fullname" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.cosmos.rbac.create }}
      serviceAccountName: {{ template "cosmos-operator.fullname"  . }}
      {{- end }}
      containers:
      - name: {{ template "cosmos-scheduler.fullname" . }}
        image: "{{ .Values.cosmos.scheduler.image.repository }}:{{ .Values.cosmos.scheduler.image.tag }}"
        imagePullPolicy: {{ .Values.cosmos.scheduler.image.pullPolicy }}
        ports:
        - name: cosmos
          containerPort: 8080
        env:
        - name: NAMESPACE
          {{- if .Values.cosmos.scheduler.namespace }}
          value: "{{ .Values.cosmos.scheduler.namespace }}"
          {{- else }}
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
          {{- end }}
        - name: INGESTION_SCHEDULE
          value: "{{ .Values.cosmos.scheduler.schedule }}"
        - name: INGESTION_SECRET_NAME
          value: {{ .Release.Name }}-metadata-ingestion
        - name: CLOUDSERVER_ENDPOINT
          value: "http://{{ .Release.Name }}-cloudserver"
        - name: MONGODB_HOSTS
          value: "{{ template "zenko.mongodb-hosts" . }}"
        - name: NODE_COUNT
          value: "{{ .Values.nodeCount }}"
        - name: STORAGE_CLASS
          value: "{{ template "cosmos-operator.storageclass" . }}"
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
{{ toYaml .Values.cosmos.scheduler.resources | indent 10 }}
{{- end -}}
